Скорее всего я сделаю command который буду делать run - но также мне нужно чтобы база возвращала мне 1 слово,
И делала запросы на слова внутри слова. (Посмотреть как сделал я в DeliveryMaster)
При этом она должна хранить массив id которые уже выдавала, чтобы не дать одинаковые id - это уже не этапе рандома я думаю

Можно делать запрос полностью в строке. мне не нужно ничего. Просто скажу что дай слова в который больше 20 слов можно сделать например и всё

Потом если база будет больше, то ок будет!

Нужно будет хранить уже сказанные слова, чтобы говорить игру атата
для всех включить exception

выпилить их из sqlite

2 раза делать bind нельзя, что же тогда?
как?

Почему-то всё идет относительно левого нижнего угла, а не середины. Странно.

Нужна функция которая только 1 букув будет рандомно вращать, чтобы когда игроку добавляется новая
	Хотя наверно не нужно если я буду копировать то как она выглядит у кома.

Нужно сделать чтобы автоматически делался align для слова игрока - Но не для компа !!!

Клики
	Я могу кончно сделать как сделано в ШФ но вопрос в том есть ли смысл, если можно вовзвращать что-то....
		Если например id будет храниться, я потом приведу тип к Letter - то я буду знать его id. И тогда я могу вызвать любую функнуию передав туда этот самый id.

		Так вроде самый лучший вариант
	Если я наследуюсь от меню, но буду сам в себя добавлять itemы из спрайтов котроые на самом деле letter - то вроде все должно работать
		Можно даже хранить в себе меню...
			Вот вариант в себе хранить вроде лучше всего получается, потому что я туда смогу добавлять, давать наружу его методы которые будут нужны. И давать другие методы которые позволят делать что-то со словом. 
				Но можно ли из меню что-то удалить или скрыть как я щас делаю? наверно не какой разницы, только нужно будет обраться не к this, а к menu.
		Или в отца добавлять...

		я зелаю sprite - menuItem если можно делать из спрйта то ок - если даже нельзя будет вращать после (приводя к спрайту, то можно это будет делать сразу при добавлении)
		добавить возможность сделать append другого спрайта

Для полета
	Я могу узнать положение любой буквы - получив на неё сслыку, и приненив метод
	Скрываю эту букву
	Создаю на её месте полную копию
	Добавляю новую букву вниз к игроку.
	Узнаю координаты того места куда я добавил.
	Делаю перелет от координат буквы копии к месту где она должна быть.
	Как только буква долетела (можно просто вызвать через заданное число секунд (которое задается и в перелете) вызвать функцию которая удалить копию буквы и покажет реальную букву у игрока.)

ВАЖНО
	playAgain может заново запускать сцену gamelayer


Простой вариант клика
	Я скрываю ту букву на которую нажали, и даелаю append её в конец, всё.
		единственное что, чтобы не изменился rotate можно сделать также добавление в конец не по char, а по Letter* - котороая на самом деле например копия той что я сделал setIsVisible(false)


Сделать кнопку - очистить слово. - чтобы сразу все убрать буквы


при нажатии на букву вызываетсвя callback внутри которого я привожу к типу Letter - после чего вызываю функцю callback которую указали при создании слова, в которую я передаю id буквы.
Для слова кома это PCLetterPressed(int id) 
PlayerLetterPressed(int id) - и в зависимости от того какая кнопка - происходит немного разная логика.

Нужно посмотреть как хранит callback ССMenu и делать таукже, только дургой аргумент у моейй фукцнии.

------------------------------------------------------------------------------------------------------------------------------------
А у letter должен быть какой-то call_back, типо когда что-то произойдет, вызови вот эту функцию и передай себя туда.
Для этого, для каждого слова нужно отдавать свой callback , а он передаст его каждой добавленной букве. Не только в init - но и если потом добавляют.

должна Быть возможность добавить букву не через letter, а через копирование другой буквы. Причем её должен быть заменен callback!

Тогда в callback слова компа, я передаю push_back в слово игрока. А при клике на букву игрока - нужно чтобы она удалилась и буква которая хранит этотже id бы сделала visible true у слова компа.
Если у меня там есть id и я как-то думал по id всё это делать а не передавая Letter* то это возможно тоже ок. Но lEtter вроде лучше, т.к. его можно и копировать и букву посмотреть, и всё что угодно сделать.


Что сегодня
-----------
1) Всё это не меняет того факта что нужно сделать push_back который бы принимал Letter. И если пок без callback ов - то просто полностью копировал бы, только возможно менял id. Хотя нет, этот id я буду использовать чтобы понимать что происходит и куда мне когда нажмут - возвращать эту букву.
	может append назвать?
		потому что мне нужна возможность только добавлять вконец и удалять из середины по id или типо того. хм.
	Так в Player он будет лежать по id тому как его позиция. Но внутри будет лежать id то с котором он был создан. Тоесть с id его положения в слове кома.
	1.1) Нужно написать свой конструктор копирования. Который при этом будет копировать еще и угол на который повернута штука
	1.2) Нужно хранить угол на который повернута буква
2) У слова должен быть метод - или в конструкторе штука, а лучше и то и то. enableAutoAlightment - чтобы когда я убираю из слова игрока букву, слово автоматически ехало в левую сторону.



Если кнопка передаст себя то
	я могу получить getParent - а в нём уже лежит тип слова. Тогда в зависимости от этого будут разные действия, так вроде ок.


	0) Почему Letter не Sprite?

	Словй который не поддерживает mulitouch (тогда к нему сначала придет)
		он должен делать swallow. 
		И на нем должно быть 2 кнопки, который не понятно как сделать вообще. Если сделать через CCMenu а у меню сделать priotity меньше чем у слоя, то на него должно раньше приходить. хм. Либо можно сделать после того как гляну там.

	1) Score += (wordLength  /* /timeUsed */ ) * 100
	!!!!!
		Можно просто в момент нажатия на submit считать сколько времяни прошло с прошлого успешного слова самостоятельно, храня это время в секундах. А начальное время = timer.
	!!!!!
		мЕТОД добавить N к скору, который потом сам будет показывать где нужно сколько именно добавляется, + он будет добавлять к переменной score. и показывать эту переменную.!

		штука которая показывать справа + сколько. Должна делать shedule чтобы через определенное время он убрался.
		например сначала сделал fade а потом ублаилися. Но если собирают слова быстро, то нужно с этим что-то делать тоже хм.

	-) Было бы прикольно сделать сбоку список сказанных слов, и по нему прям проверять сказано оно было или нет, а не убирать их contained.
		Для этого нужно все двигать налево, и скорее всего сильно больше слова не получится. хм. Проблема в том что реально маленький экран.
		Можно хотябы в конце выводить может слова которые ты сказал типо. Или чтобы можно было посмотреть во время паузы?
		И например во время паузы можно было выйти в меню? Но тогда получится что можно будет думать во время этой шляпы.
		самое правильное было бы глянуть как это сделано у других типов.

	--) Сделать progressbar который бы показывал сколько слов осталовь.
		Либо когда игрок угадывает слово, можно сделать чтобы показывалось сколько слов осталось разгадать снизу например.
	2) Обратный таймер
		сделать отдельный метод startTimer
		updateTimer

	3) Нахождеие слова добавляет время

	4) Таймер который тикает относительно каждого слова. И чем быстрее найти слово, тем больше дадут очков.

	3) Метод который принимает откуда и куда создать эффект перелета. хм

	4) хранить в букву angle и когда копирую, поверачивать ту букву на такойже angle

	-) Глянуть какие эффукты можно  делать с CCLabelBMF или как его там. Чтобы понять как можно красиво score увеличивать.
	--) Возможно можно делать какие-то эффекты партикалами когда ты правильное слово находишь.

	) Можно сделать отдельным классаом GameOverLayer который накрывает слово тупо, и дает варианты пойти в mainMenu или же получить следующее слово и дальше играть - resetGame типо нудно будет делать еще


Нужно загрузить , оставить только уникальные, там вроде список должен быть из более используемы раз их мало там, i hope, i think
Можно из большого словаря взять слов <= 5 символам чтобы можно было много разных мелких говорить

если проверсит не отпуская от самое первой буквы до самой последней то слово сброситься
Больше букв должны давать сильно больше выигрыш, а не число бакв * 50